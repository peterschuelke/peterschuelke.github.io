{"version":3,"file":"HomePage.stories-B28_l0sp.js","sources":["../../../src/components/Project/ProjectCard/ProjectCard.tsx","../../../src/components/Project/ProjectsList/ProjectsList.tsx","../../../src/components/LightSource/MultiLightSource.tsx","../../../src/components/HeroBackground/HeroBackground.tsx","../../../src/components/Hero/Hero.tsx","../../../src/components/Feature/Feature.tsx","../../../src/components/TwoColumnText/TwoColumnText.tsx","../../../src/components/AccordionList/AccordionList.tsx","../../../src/components/AccordionItem/AccordionItem.tsx","../../../src/components/GradientWrapper/GradientWrapper.tsx","../../../src/pages/HomePage/HomePage.tsx","../../../src/pages/HomePage/HomePage.stories.tsx"],"sourcesContent":["import { useInView } from 'react-intersection-observer'\n\ninterface Props {\n  project: {\n    id: number\n    title: string\n    description: string\n    summary: string\n    image: string\n    link: string\n    role: string\n    skills: {\n      id: number\n      title: string\n    }[]\n  }\n}\n\nconst ProjectCard = ({ project }: Props) => {\n  const { ref, inView } = useInView({\n    threshold: 0.1,\n    triggerOnce: true,\n  })\n\n  return (\n    <div\n      ref={ref}\n      className={`project-card ${inView ? 'project-card--visible' : ''}`}\n    >\n      <a\n        href={`/projects/${project.id}`}\n        rel=\"noopener noreferrer\"\n        className=\"project-card__link\"\n      >\n      </a>\n      <div className=\"project-card__image\">\n        <img src={project.image} alt={project.title} />\n      </div>\n      <div className=\"project-card__content\">\n        <h3 className=\"project-card__title\">\n          <a\n            href={project.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {project.title}\n          </a>\n        </h3>\n        <p className=\"project-card__role\">{project.role}</p>\n        <p className=\"project-card__summary\">{project.summary}</p>\n        <p className=\"project-card__link-text\">\n          View Project\n        </p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectCard","import { useState, useEffect } from 'react'\nimport type { FindProjects } from 'types/graphql'\nimport { CellSuccessProps, CellFailureProps, useQuery } from '@redwoodjs/web'\nimport { gql } from '@apollo/client'\nimport { loadProjects } from 'src/utils/staticData'\nimport { Link, routes } from '@redwoodjs/router'\nimport ProjectCard from '../ProjectCard/ProjectCard'\n\n// Only use GraphQL in development\nconst QUERY = process.env.NODE_ENV === 'development' ? gql`\n  query FindProjects {\n    projects {\n      id\n      title\n      description\n      summary\n      image\n      link\n      role\n      skills {\n        id\n        title\n      }\n    }\n  }\n` : null\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Empty = () => {\n  return (\n    <div className=\"projects-list__empty\">\n      {'No projects yet. '}\n      <Link to={routes.newProject()} className=\"projects-list__link\">\n        {'Create one?'}\n      </Link>\n    </div>\n  )\n}\n\nexport const Failure = ({ error }: CellFailureProps) => (\n  <div className=\"projects-list__error\">\n    Error loading projects: {error.message}\n  </div>\n)\n\nexport const Success = ({ projects }: CellSuccessProps<FindProjects>) => {\n  return (\n    <div className=\"projects-list\">\n      <div className=\"projects-list__grid\">\n        {projects.map((project) => (\n          <ProjectCard key={project.id} project={project} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// Static data version for production\nconst StaticProjectsList = () => {\n  const [projects, setProjects] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        console.log('Fetching static projects...')\n        const data = await loadProjects()\n        console.log('Static projects data:', data)\n        if (data) {\n          setProjects(data)\n        }\n      } catch (err) {\n        console.error('Error loading static projects:', err)\n        setError(err)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchProjects()\n  }, [])\n\n  if (loading) return <Loading />\n  if (error) return <Failure error={error} />\n  if (!projects?.length) return <Empty />\n\n  return <Success projects={projects} />\n}\n\nconst ProjectsList = () => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log('Running in development mode')\n    const { loading, error, data } = useQuery(QUERY)\n\n    if (loading) return <Loading />\n    if (error) return <Failure error={error} />\n    if (!data?.projects?.length) return <Empty />\n\n    return <Success projects={data.projects} />\n  }\n\n  console.log('Running in production mode')\n  return <StaticProjectsList />\n}\n\nexport default ProjectsList","import { useEffect, useState, useRef } from 'react'\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'\nimport { Sphere, OrbitControls } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { MeshTransmissionMaterial } from '@react-three/drei'\n\ninterface MultiLightSourceProps {\n  className?: string\n  lightPositions: Array<[number, number, number]>\n  onAnimationComplete?: () => void\n  onLensClick?: (lensNumber: number) => void\n}\n\ninterface LightModelProps {\n  mousePosition: { x: number, y: number }\n  positions: Array<[number, number, number]>\n  containerRef: React.RefObject<HTMLDivElement>\n  onAnimationComplete?: () => void\n  onLensClick?: (lensNumber: number) => void\n}\n\nfunction LightModel({ mousePosition, positions, containerRef, onAnimationComplete, onLensClick }: LightModelProps) {\n  const gltf = useLoader(GLTFLoader, '/assets/MultiStageLights.glb')\n  const modelRefs = useRef<THREE.Group[]>([])\n  const [spotLight, setSpotLight] = useState<THREE.SpotLight | null>(null)\n  const [nameMesh, setNameMesh] = useState<THREE.Mesh | null>(null)\n  const [animationPhase, setAnimationPhase] = useState<'initial' | 'turningOn' | 'rotating' | 'waiting' | 'following'>('initial')\n  const animationStartTime = useRef(Date.now())\n  const [hasCursorEntered, setHasCursorEntered] = useState(false)\n  const [lightIntensity, setLightIntensity] = useState(0)\n  const lastMouseMoveTime = useRef(Date.now())\n  const fadeStartTime = useRef(Date.now())\n  const [isFading, setIsFading] = useState(false)\n  const [lightColors, setLightColors] = useState<{ [key: number]: string }>({\n    1: '#00ffff', // cyan\n    2: '#ff00ff', // magenta\n    3: '#bfff00', // lime\n    4: '#00ffff', // cyan\n    5: '#ff00ff', // magenta\n    6: '#bfff00', // lime\n  })\n\n  const colorCycle = ['#00ffff', '#ff00ff', '#bfff00'] // cyan, magenta, lime\n  const colorTransitionRef = useRef<{ [key: number]: { startColor: string, endColor: string, progress: number } }>({})\n  const [rotatingLights, setRotatingLights] = useState<{ [key: number]: boolean }>({\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true\n  })\n\n  // Add mouse movement tracking\n  useEffect(() => {\n    const handleMouseMove = () => {\n      lastMouseMoveTime.current = Date.now()\n      setIsFading(true)\n    }\n\n    window.addEventListener('mousemove', handleMouseMove)\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n    }\n  }, [])\n\n  const cycleLightColor = (lightNumber: number) => {\n    console.log('Cycling color for light:', lightNumber)\n    setLightColors(prev => {\n      const currentColor = prev[lightNumber]\n      const currentIndex = colorCycle.indexOf(currentColor)\n      const nextIndex = (currentIndex + 1) % colorCycle.length\n      const nextColor = colorCycle[nextIndex]\n\n      // Update all materials and lights for this light number\n      gltf.scene.traverse((child) => {\n        const name = child.name.toLowerCase()\n        if (name.includes(`lens_${lightNumber}`)) {\n          if (child instanceof THREE.Mesh) {\n            const material = child.material as THREE.MeshStandardMaterial\n            if (material) {\n              material.color.set(nextColor)\n              material.emissive.set(nextColor)\n            }\n          }\n        } else if (child instanceof THREE.SpotLight && child.parent?.name.toLowerCase().includes(`lens_${lightNumber}`)) {\n          child.color.set(nextColor)\n        }\n      })\n\n      // Stop rotation for this light and clear its transition\n      setRotatingLights(prev => ({\n        ...prev,\n        [lightNumber]: false\n      }))\n      delete colorTransitionRef.current[lightNumber]\n\n      return {\n        ...prev,\n        [lightNumber]: nextColor\n      }\n    })\n  }\n\n  const getLensColor = (lensNumber: number) => {\n    return lightColors[lensNumber] || '#ffffff'\n  }\n\n  const createSpotLight = (color: string, lensNumber: number) => {\n    const newSpotLight = new THREE.SpotLight(color, 0, 10, Math.PI / 6, 0.5, 1)\n    newSpotLight.position.set(0, 0, 0)\n    newSpotLight.rotation.x = Math.PI / 4\n    const target = new THREE.Object3D()\n    target.position.set(0, 14, -1)\n    newSpotLight.target = target\n    return { newSpotLight, target }\n  }\n\n  // Add cursor detection\n  useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      if (!hasCursorEntered) {\n        setHasCursorEntered(true)\n      }\n    }\n\n    window.addEventListener('mousemove', handleMouseMove)\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n    }\n  }, [hasCursorEntered])\n\n  useEffect(() => {\n    if (!gltf.scene) return\n\n    // Initialize refs array\n    modelRefs.current = positions.map(() => new THREE.Group())\n\n    // Store initial rotations\n    const initialRotations = new Map<string, number>()\n    gltf.scene.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        const name = child.name.toLowerCase()\n        if (name.includes('lens') || name.includes('head')) {\n          initialRotations.set(name, child.rotation.x)\n        }\n      }\n    })\n\n    // Apply materials to all parts and collect lights\n    const spotlights: THREE.SpotLight[] = []\n    gltf.scene.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        const name = child.name.toLowerCase()\n        if (name.includes('lens')) {\n          const lensNumber = parseInt(name.match(/\\d+/)?.[0] || '0')\n          const color = getLensColor(lensNumber)\n\n          child.material = new THREE.MeshStandardMaterial({\n            color,\n            emissive: color,\n            emissiveIntensity: 0, // Start with no emission\n            metalness: 0.8,\n            roughness: 0.2,\n            envMapIntensity: 1\n          })\n\n          // Add spotlight to all lenses\n          if (lensNumber > 0) {\n            const { newSpotLight, target } = createSpotLight(color, lensNumber)\n            child.add(newSpotLight)\n            child.add(target)\n            spotlights.push(newSpotLight)\n            if (lensNumber === 2) {\n              setSpotLight(newSpotLight)\n            }\n          }\n        } else if (name.includes('name') || name.includes('title')) {\n          setNameMesh(child)\n        } else if (name.includes('truss') || name.includes('chain')) {\n          child.material = new THREE.MeshStandardMaterial({\n            color: '#e0e0e0',\n            metalness: 0.8,\n            roughness: 0.3,\n            envMapIntensity: 1.6\n          })\n        } else {\n          child.material = new THREE.MeshStandardMaterial({\n            color: '#ffffff',\n            metalness: 0.9,\n            roughness: 0.2,\n            envMapIntensity: 1\n          })\n        }\n      }\n    })\n\n    // Find and store all lights\n    gltf.scene.traverse((child) => {\n      if (child instanceof THREE.PointLight) {\n        child.intensity = 0\n      } else if (child instanceof THREE.HemisphereLight) {\n        child.intensity = 0\n      } else if (child instanceof THREE.AmbientLight) {\n        child.intensity = 0\n      }\n    })\n  }, [gltf, positions])\n\n  useFrame(() => {\n    if (!gltf.scene || !modelRefs.current.length || !containerRef.current) return\n\n    const currentTime = Date.now()\n    const elapsedTime = (currentTime - animationStartTime.current) / 1000 // Convert to seconds\n    const timeSinceLastMouseMove = currentTime - lastMouseMoveTime.current\n\n    // Handle color fade animation\n    if (isFading) {\n      const fadeDuration = 2 // 2 seconds per color transition\n      const fadeStep = 1 / (fadeDuration * 60) // Assuming 60fps\n\n      // Only process lights that are set to rotate\n      Object.entries(rotatingLights)\n        .filter(([_, shouldRotate]) => shouldRotate)\n        .forEach(([lightNumber]) => {\n          const lensNumber = parseInt(lightNumber)\n          const child = gltf.scene.children.find(child =>\n            child.name.toLowerCase().includes(`lens_${lensNumber}`)\n          )\n\n          if (child instanceof THREE.Mesh) {\n            const material = child.material as THREE.MeshStandardMaterial\n            if (material) {\n              // Initialize or update transition if needed\n              if (!colorTransitionRef.current[lensNumber]) {\n                const currentColor = lightColors[lensNumber]\n                const currentIndex = colorCycle.indexOf(currentColor)\n                const nextIndex = (currentIndex + 1) % colorCycle.length\n                const nextColor = colorCycle[nextIndex]\n\n                colorTransitionRef.current[lensNumber] = {\n                  startColor: currentColor,\n                  endColor: nextColor,\n                  progress: 0\n                }\n              }\n\n              const transition = colorTransitionRef.current[lensNumber]\n              const currentColor = new THREE.Color(transition.startColor)\n              const nextColor = new THREE.Color(transition.endColor)\n\n              // Convert to HSL for smoother transitions\n              const currentHSL = { h: 0, s: 0, l: 0 }\n              const nextHSL = { h: 0, s: 0, l: 0 }\n              currentColor.getHSL(currentHSL)\n              nextColor.getHSL(nextHSL)\n\n              // Interpolate HSL values\n              const h = currentHSL.h + (nextHSL.h - currentHSL.h) * transition.progress\n              const s = currentHSL.s + (nextHSL.s - currentHSL.s) * transition.progress\n              const l = currentHSL.l + (nextHSL.l - currentHSL.l) * transition.progress\n\n              // Create new color from interpolated HSL\n              const interpolatedColor = new THREE.Color().setHSL(h, s, l)\n\n              // Apply interpolated color\n              material.color.copy(interpolatedColor)\n              material.emissive.copy(interpolatedColor)\n\n              // Update spotlight color\n              child.children.forEach(spotlight => {\n                if (spotlight instanceof THREE.SpotLight) {\n                  spotlight.color.copy(interpolatedColor)\n                }\n              })\n\n              // Update progress\n              transition.progress += fadeStep\n\n              // Update state when transition is complete\n              if (transition.progress >= 1) {\n                setLightColors(prev => ({\n                  ...prev,\n                  [lensNumber]: transition.endColor\n                }))\n                // Start next transition\n                const currentIndex = colorCycle.indexOf(transition.endColor)\n                const nextIndex = (currentIndex + 1) % colorCycle.length\n                colorTransitionRef.current[lensNumber] = {\n                  startColor: transition.endColor,\n                  endColor: colorCycle[nextIndex],\n                  progress: 0\n                }\n              }\n            }\n          }\n        })\n    }\n\n    // Animation sequence\n    if (animationPhase === 'initial') {\n      // Start turning on after 0.3 seconds\n      if (elapsedTime > 0.3) {\n        animationStartTime.current = Date.now() // Reset timer for turning on phase\n        setAnimationPhase('turningOn')\n      }\n    } else if (animationPhase === 'turningOn') {\n      // Turn on all lights over 0.7 seconds\n      const intensity = Math.min(1, elapsedTime / 0.7)\n\n      // Update all spotlights\n      gltf.scene.traverse((child) => {\n        if (child instanceof THREE.SpotLight) {\n          child.intensity = intensity * 50\n          const parent = child.parent\n          if (parent && parent instanceof THREE.Mesh) {\n            const material = parent.material as THREE.MeshStandardMaterial\n            if (material) {\n              material.emissiveIntensity = intensity * 2\n            }\n          }\n        }\n      })\n\n      // Start rotation after lights are on\n      if (elapsedTime > 0.7) {\n        animationStartTime.current = Date.now() // Reset timer for rotation phase\n        setAnimationPhase('rotating')\n      }\n    } else if (animationPhase === 'rotating') {\n      // Rotate lights down over 0.7 second\n      const rotationProgress = Math.min(1, elapsedTime / 0.7)\n      // Start 15 degrees higher (-PI/2 + PI/12) and rotate to PI/2 - PI/18 (10 degrees less)\n      const startRotation = -Math.PI/2 + Math.PI/12\n      const targetRotation = startRotation + (Math.PI/2 - Math.PI/18) * rotationProgress\n\n      // Fade in ambient lights during rotation\n      const intensity = rotationProgress\n      setLightIntensity(intensity)\n\n      gltf.scene.traverse((child) => {\n        if (child instanceof THREE.PointLight) {\n          child.intensity = intensity * 0.6\n        } else if (child instanceof THREE.HemisphereLight) {\n          child.intensity = intensity * 0.1\n        } else if (child instanceof THREE.AmbientLight) {\n          child.intensity = intensity * 0.3\n        }\n      })\n\n      gltf.scene.traverse((child) => {\n        const name = child.name.toLowerCase()\n        if (name.includes('lens') || name.includes('head')) {\n          const currentZRotation = child.rotation.z\n          child.rotation.set(targetRotation, 0, currentZRotation)\n        }\n      })\n\n      // Move to waiting phase after rotation\n      if (elapsedTime > 0.7) {\n        animationStartTime.current = Date.now() // Reset timer for waiting phase\n        setAnimationPhase('waiting')\n        onAnimationComplete?.()\n        // Start fade animation after rotation completes\n        setIsFading(true)\n        fadeStartTime.current = Date.now()\n      }\n    } else if (animationPhase === 'waiting') {\n      // Wait for cursor to enter window\n      if (hasCursorEntered) {\n        setAnimationPhase('following')\n      }\n    } else if (animationPhase === 'following') {\n      // Normal mouse following behavior\n      const rect = containerRef.current.getBoundingClientRect()\n      const centerX = rect.left + rect.width / 2\n      const centerY = rect.top + rect.height / 2\n\n      // Start fade animation if mouse hasn't moved for 1 second\n      if (timeSinceLastMouseMove > 1000 && !isFading) {\n        setIsFading(true)\n        fadeStartTime.current = currentTime\n      }\n\n      modelRefs.current.forEach((group, index) => {\n        const position = positions[index]\n        const lightNumber = index + 1\n\n        gltf.scene.traverse((child) => {\n          const name = child.name.toLowerCase()\n          if (name.includes(`lens_${lightNumber}`) || name.includes(`head_${lightNumber}`)) {\n            const lightScreenX = centerX + (position[0] * rect.width / 2)\n            const lightScreenY = centerY - (position[1] * rect.height / 2)\n\n            const dx = lightScreenX - mousePosition.x\n            const dy = lightScreenY - mousePosition.y\n            let baseAngle = Math.atan2(dy, dx) + Math.PI / 2\n\n            switch (lightNumber) {\n              case 1:\n                baseAngle += Math.PI / 12 // 15 degrees to the left\n                break\n              case 2:\n                baseAngle += Math.PI / 24 // 7.5 degrees to the left\n                break\n              case 5:\n                baseAngle -= Math.PI / 24 // 7.5 degrees to the right\n                break\n              case 6:\n                baseAngle -= Math.PI / 12 // 15 degrees to the right\n                break\n              default:\n                break\n            }\n\n            // Apply rotations while maintaining the current X rotation\n            const currentXRotation = child.rotation.x\n            child.rotation.set(currentXRotation, 0, baseAngle)\n\n            const screenDy = lightScreenY - mousePosition.y\n            const maxScreenDistance = rect.height / 2\n            let yPosForXRot = Math.min(1, Math.max(-1, -screenDy / maxScreenDistance))\n\n            const targetXRotation = (yPosForXRot + 1) * (Math.PI / 2)\n            child.rotation.x = targetXRotation\n          } else if (name.includes(`arms_${lightNumber}`)) {\n            const lightScreenX = centerX + (position[0] * rect.width / 2)\n            const lightScreenY = centerY - (position[1] * rect.height / 2)\n\n            const dx = lightScreenX - mousePosition.x\n            const dy = lightScreenY - mousePosition.y\n            let baseAngle = Math.atan2(dy, dx) + Math.PI / 2\n\n            switch (lightNumber) {\n              case 1:\n                baseAngle += Math.PI / 12\n                break\n              case 2:\n                baseAngle += Math.PI / 24\n                break\n              case 5:\n                baseAngle -= Math.PI / 24\n                break\n              case 6:\n                baseAngle -= Math.PI / 12\n                break\n              default:\n                break\n            }\n\n            child.rotation.z = -baseAngle\n          }\n        })\n      })\n    } else if (animationPhase === 'waiting' || animationPhase === 'following') {\n      // Maintain light intensities after animation\n      gltf.scene.traverse((child) => {\n        if (child instanceof THREE.SpotLight) {\n          child.intensity = 50\n          const parent = child.parent\n          if (parent && parent instanceof THREE.Mesh) {\n            const material = parent.material as THREE.MeshStandardMaterial\n            if (material) {\n              material.emissiveIntensity = 2\n            }\n          }\n        } else if (child instanceof THREE.PointLight) {\n          child.intensity = 0.6\n        } else if (child instanceof THREE.HemisphereLight) {\n          child.intensity = 0.1\n        } else if (child instanceof THREE.AmbientLight) {\n          child.intensity = 0.3\n        }\n      })\n    }\n\n    // Always maintain light intensities regardless of phase\n    if (animationPhase !== 'initial') {\n      gltf.scene.traverse((child) => {\n        if (child instanceof THREE.SpotLight) {\n          child.intensity = 50\n          const parent = child.parent\n          if (parent && parent instanceof THREE.Mesh) {\n            const material = parent.material as THREE.MeshStandardMaterial\n            if (material) {\n              material.emissiveIntensity = 2\n            }\n          }\n        }\n      })\n    }\n  })\n\n  if (!gltf.scene) return null\n\n  return (\n    <>\n      <group position={[0, 0, 0]}>\n        <primitive\n          ref={(el) => {\n            if (el) modelRefs.current[0] = el\n          }}\n          object={gltf.scene}\n          scale={0.02}\n          onClick={(e) => {\n            // Stop event propagation to prevent multiple triggers\n            e.stopPropagation()\n\n            // Find the light number from any part of the clicked object\n            const name = e.object.name.toLowerCase()\n            // Match either head_ or lens_ followed by a number\n            const lightMatch = name.match(/(?:head|lens)_(\\d+)/)\n            if (lightMatch) {\n              const lightNumber = parseInt(lightMatch[1])\n              console.log('Found light number:', lightNumber)\n              cycleLightColor(lightNumber)\n            }\n          }}\n        />\n      </group>\n      {nameMesh && (\n        <mesh\n          geometry={nameMesh.geometry}\n          position={nameMesh.position}\n          rotation={nameMesh.rotation}\n        >\n          <MeshTransmissionMaterial\n            color=\"#ffffff\"\n            attenuationColor=\"#ffffff\"\n            background={new THREE.Color(\"#000000\")}\n            transmissionSampler={true}\n            backside={true}\n            attenuationDistance={0.5}\n            roughness={0.1}\n            transmission={0.95}\n            ior={1.5}\n            side={THREE.DoubleSide}\n          />\n        </mesh>\n      )}\n      <ambientLight intensity={lightIntensity * 0.3} />\n      <pointLight position={[1.5, 0, 1]} intensity={lightIntensity * 0.6} color=\"#e0e0e0\" />\n      <hemisphereLight\n        intensity={lightIntensity * 0.1}\n        groundColor=\"#000000\"\n        color=\"#ffffff\"\n      />\n    </>\n  )\n}\n\nconst MultiLightSource = ({ className = '', lightPositions, onAnimationComplete, onLensClick }: MultiLightSourceProps) => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      setMousePosition({\n        x: event.clientX,\n        y: event.clientY\n      })\n    }\n\n    window.addEventListener('mousemove', handleMouseMove)\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n    }\n  }, [])\n\n  return (\n    <div\n      ref={containerRef}\n      className={`multi-light-source-container ${className}`}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <Canvas\n        camera={{ position: [1.5, -1.25, 4], fov: 20 }}\n        gl={{\n          antialias: true,\n          alpha: true,\n          powerPreference: 'high-performance'\n        }}\n        dpr={[1, 2]}\n        performance={{ min: 0.5 }}\n      >\n        <OrbitControls\n          enableRotate={false}\n          enableZoom={false}\n          enablePan={false}\n          target={[1.5, -.25, 0]}\n        />\n        <LightModel\n          mousePosition={mousePosition}\n          positions={lightPositions}\n          containerRef={containerRef}\n          onAnimationComplete={onAnimationComplete}\n          onLensClick={onLensClick}\n        />\n      </Canvas>\n    </div>\n  )\n}\n\nexport default MultiLightSource","import MultiLightSource from 'src/components/LightSource/MultiLightSource'\nimport './HeroBackground.pcss'\n\ninterface HeroBackgroundProps {\n  onAnimationComplete?: () => void\n  onLensClick?: (lensNumber: number) => void\n}\n\nconst HeroBackground = ({ onAnimationComplete, onLensClick }: HeroBackgroundProps) => {\n  const lightPositions: Array<[number, number, number]> = [\n    [-0.73, 0.45, 0],  // Far Left light\n    [-0.425, 0.45, 0],  // Left light\n    [-0.14, 0.45, 0],  // Left-center light\n    [0.14, 0.45, 0],   // Right-center light\n    [0.425, 0.45, 0],   // Right light\n    [0.73, 0.45, 0]    // Far Right light\n  ]\n\n  return (\n    <div className=\"hero__background\">\n      {/* <img className=\"hero__background--truss\" src=\"/assets/Truss.png\" alt=\"Truss\" />\n      <img className=\"hero__background--truss truss--2\" src=\"/assets/Truss.png\" alt=\"Truss\" /> */}\n      <div className=\"hero__content\" aria-hidden=\"true\">\n        <h1>Peter Schuelke</h1>\n        <p>Building thoughtful, flexible systems for the web.</p>\n      </div>\n      <MultiLightSource\n        className=\"hero__background--light-source\"\n        lightPositions={lightPositions}\n        onAnimationComplete={onAnimationComplete}\n        onLensClick={onLensClick}\n      />\n    </div>\n  )\n}\n\nexport default HeroBackground","import { useEffect, useRef } from 'react'\nimport HeroBackground from 'src/components/HeroBackground/HeroBackground'\n\ninterface HeroProps {\n  onAnimationComplete?: () => void\n  onLensClick?: (lensNumber: number) => void\n}\n\nconst Hero = ({ onAnimationComplete, onLensClick }: HeroProps) => {\n  const contentRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      if (!contentRef.current) return\n\n      const rect = contentRef.current.getBoundingClientRect()\n      const x = ((event.clientX - rect.left) / rect.width) * 100\n      const y = ((event.clientY - rect.top) / rect.height) * 100\n\n      contentRef.current.style.setProperty('--mouse-x', `${x}%`)\n      contentRef.current.style.setProperty('--mouse-y', `${y}%`)\n    }\n\n    window.addEventListener('mousemove', handleMouseMove)\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove)\n    }\n  }, [])\n\n  return (\n    <section className=\"hero\">\n      <HeroBackground onAnimationComplete={onAnimationComplete} onLensClick={onLensClick} />\n      <div ref={contentRef} className=\"hero__content container--normal\">\n        {/* <h1 className=\"hero__title\" data-text=\"Peter Schuelke\">Peter Schuelke</h1>\n        <p className=\"hero__subtitle\" data-text=\"Full Stack Developer\">Full Stack Developer</p> */}\n      </div>\n    </section>\n  )\n}\n\nexport default Hero","import { useState, useEffect, ReactElement } from 'react'\nimport './Feature.pcss'\nimport AccordionList from '../AccordionList/AccordionList'\n\ninterface FeatureProps {\n  background: 'lights' | 'black'\n  eyebrow: string\n  title: string\n  children: ReactElement<{ hue?: number }>\n}\n\nconst Feature = ({ background, eyebrow, title, children }: FeatureProps) => {\n  const [mousePosition, setMousePosition] = useState({ x: 50, y: 50 })\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      const target = e.currentTarget as HTMLElement\n      const rect = target.getBoundingClientRect()\n      const x = ((e.clientX - rect.left) / rect.width) * 100\n      const y = ((e.clientY - rect.top) / rect.height) * 100\n      setMousePosition({ x, y })\n    }\n\n    const element = document.querySelector('.feature--lights')\n    if (element) {\n      element.addEventListener('mousemove', handleMouseMove)\n    }\n\n    return () => {\n      if (element) {\n        element.removeEventListener('mousemove', handleMouseMove)\n      }\n    }\n  }, [])\n\n  return (\n    <section className={`feature feature--${background}`}>\n      <div className=\"feature__content\">\n        <div className=\"feature__header\">\n          <span className=\"feature__eyebrow\">{eyebrow}</span>\n          <h2 className=\"feature__title\">{title}</h2>\n        </div>\n        <div className=\"feature__body\">\n          {children}\n        </div>\n      </div>\n      {background === 'lights' && (\n        <div\n          className=\"feature__gradient gradient-animated\"\n          style={{\n            background: `radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, hsla(0, 100%, 50%, 0.15) 0%, hsla(0, 100%, 50%, 0.05) 30%, transparent 70%), var(--color-bg-hue-bolder)`\n          }}\n        />\n      )}\n    </section>\n  )\n}\n\nexport default Feature","import './TwoColumnText.pcss'\n\ninterface TwoColumnTextProps {\n  paragraphs: string[]\n}\n\nconst TwoColumnText = ({ paragraphs }: TwoColumnTextProps) => {\n  return (\n    <div className=\"two-column-text\">\n      {paragraphs.map((paragraph, index) => (\n        <p key={index}>{paragraph}</p>\n      ))}\n    </div>\n  )\n}\n\nexport default TwoColumnText","import { ReactElement } from 'react'\nimport './AccordionList.pcss'\nimport AccordionItem from '../AccordionItem/AccordionItem'\n\ninterface AccordionItemProps {\n  header: string\n  children: React.ReactNode\n  hue?: number\n}\n\ninterface AccordionListProps {\n  children: ReactElement<AccordionItemProps>[]\n  hue?: number\n}\n\nconst AccordionList = ({ children, hue = 0 }: AccordionListProps) => {\n  const childrenWithHue = React.Children.map(children, (child) => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, { hue })\n    }\n    return child\n  })\n\n  return (\n    <div className=\"accordion-list\">\n      {childrenWithHue}\n    </div>\n  )\n}\n\nexport default AccordionList","import { useState } from 'react'\nimport './AccordionItem.pcss'\n\ninterface AccordionItemProps {\n  header: string\n  children: React.ReactNode\n}\n\nconst AccordionItem = ({ header, children }: AccordionItemProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <div className=\"accordion-item\">\n      <div\n        className=\"accordion-item__border gradient-animated\"\n        style={{\n          background: `linear-gradient(90deg, hsla(0, 100%, 50%, 0.4) 0%, hsla(0, 100%, 50%, 0.1) 50%, hsla(0, 100%, 50%, 0.2) 100%), var(--color-bg-hue-default)`\n        }}\n      />\n      <button\n        className=\"accordion-item__header\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-expanded={isOpen}\n      >\n        <span>{header}</span>\n        <span className=\"accordion-item__icon\">\n          {isOpen ? '−' : '+'}\n        </span>\n      </button>\n      <div\n        className={`accordion-item__body ${isOpen ? 'accordion-item__body--open' : ''}`}\n        aria-hidden={!isOpen}\n      >\n        {children}\n      </div>\n      <div\n        className=\"accordion-item__border gradient-animated\"\n        style={{\n          background: `linear-gradient(90deg, hsla(0, 100%, 50%, 0.4) 0%, hsla(0, 100%, 50%, 0.1) 50%, hsla(0, 100%, 50%, 0.2) 100%), var(--color-bg-hue-default)`\n        }}\n      />\n    </div>\n  )\n}\n\nexport default AccordionItem","import { useEffect, useState } from 'react'\n\ninterface GradientWrapperProps {\n  children: React.ReactNode\n}\n\nconst GradientWrapper = ({ children }: GradientWrapperProps) => {\n  const [hue, setHue] = useState(0)\n\n  useEffect(() => {\n    let animationFrame: number\n    let startTime: number | null = null\n\n    const animate = (timestamp: number) => {\n      if (!startTime) {\n        startTime = timestamp\n        console.log('Animation started')\n      }\n      const progress = timestamp - startTime\n      const newHue = (progress / 18000) * 360 // 18 seconds for full rotation\n\n      // Reset startTime when we complete a full rotation\n      if (newHue >= 360) {\n        startTime = timestamp\n      }\n\n      setHue(newHue % 360)\n      document.documentElement.style.setProperty('--hue-rotation', `${newHue % 360}deg`)\n      animationFrame = requestAnimationFrame(animate)\n    }\n\n    animationFrame = requestAnimationFrame(animate)\n\n    return () => {\n      console.log('GradientWrapper unmounted')\n      cancelAnimationFrame(animationFrame)\n    }\n  }, [])\n\n  return (\n    <div className=\"gradient-wrapper\">\n      {children}\n    </div>\n  )\n}\n\nexport default GradientWrapper","// import { Link, routes } from '@redwoodjs/router'\nimport { Metadata } from '@redwoodjs/web'\nimport { useState } from 'react'\nimport ProjectsList from 'src/components/Project/ProjectsList'\nimport Hero from 'src/components/Hero/Hero'\nimport Feature from 'src/components/Feature/Feature'\nimport TwoColumnText from 'src/components/TwoColumnText/TwoColumnText'\nimport AccordionList from 'src/components/AccordionList/AccordionList'\nimport AccordionItem from 'src/components/AccordionItem/AccordionItem'\nimport GradientWrapper from 'src/components/GradientWrapper/GradientWrapper'\n\nimport './HomePage.pcss'\n\nconst HomePage = () => {\n  const [isContentVisible, setIsContentVisible] = useState(false)\n\n  return (\n    <GradientWrapper>\n      <div className=\"home-page\">\n        <Metadata title=\"Home\" description=\"Home page\" />\n        <Hero onAnimationComplete={() => setIsContentVisible(true)} />\n        <div className={`container--normal content ${isContentVisible ? 'content--visible' : ''}`}>\n          <Feature\n            background=\"lights\"\n            eyebrow=\"About\"\n            title=\"A balance of systems thinking & creative problem solving.\"\n          >\n            <TwoColumnText\n              paragraphs={[\n                \"I've built digital products for brands like the NBA, CrossFit, and Children's Hospital of Philadelphia. Over the last decade, I've led front-end architecture on multimillion-dollar platforms, developed design systems from scratch, and collaborated with designers, strategists, and stakeholders to ship experiences that scale.\",\n                \"What keeps me inspired is the blend of creativity and structure. I love taking vague requirements and transforming them into purposeful, extensible interfaces that just feel right. Whether I'm refining performance, integrating AI, or mentoring devs on scalable systems, I aim to bring clarity, craft, and momentum to every project.\"\n              ]}\n            />\n          </Feature>\n\n          <Feature\n            background=\"black\"\n            eyebrow=\"Experience\"\n            title=\"How I can help you\"\n          >\n            <AccordionList>\n              <AccordionItem header=\"Empathy first\">\n                <p>Before writing code or architecting a system, I start by listening. Whether I'm talking to a product owner, a designer, or another developer, I want to understand their goals, their pain points, and how they define success. I've found that the best solutions come from asking the right questions early, not jumping to answers. Empathy builds trust—and trust makes better products.</p>\n              </AccordionItem>\n              <AccordionItem header=\"Systems over shortcuts\">\n                <p>I love solving problems, but I'm especially drawn to solutions that last. That often means taking a bit more time up front to create clean abstractions, reusable components, or a pattern library that evolves with the product. I've seen firsthand how thoughtful systems can accelerate teams—reducing bugs, onboarding time, and duplicate effort. Good systems let people focus on the fun parts of building.</p>\n              </AccordionItem>\n              <AccordionItem header=\"Design-aware engineering\">\n                <p>I don't believe in pixel-pushing handoffs. I see design and engineering as a conversation—and I enjoy that back-and-forth. Whether I'm working inside Figma or giving real-time feedback in a pairing session, I care deeply about translating design intent into code that's accessible, performant, and flexible. Some of my favorite work has come from collaborating closely with designers to refine flows or prototype tricky edge cases together.</p>\n              </AccordionItem>\n              <AccordionItem header=\"Curiosity never stops\">\n                <p>I'm always exploring new tools, patterns, and ideas. Whether it's integrating LLMs with LangChain, experimenting with design token pipelines, or diving into visual regression testing, I treat each project as a chance to learn and level up. I also love sharing what I've learned—through mentoring, reviewing pull requests, or just talking shop with teammates. Growth is a shared experience.</p>\n              </AccordionItem>\n            </AccordionList>\n          </Feature>\n\n          <h2>My Work</h2>\n          <ProjectsList />\n        </div>\n      </div>\n    </GradientWrapper>\n  )\n}\n\nexport default HomePage\n","import type { Meta, StoryObj } from '@storybook/react'\n\nimport HomePage from './HomePage'\n\nconst meta: Meta<typeof HomePage> = {\n  component: HomePage,\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof HomePage>\n\nexport const Primary: Story = {}\n"],"names":["ProjectCard","project","ref","inView","useInView","threshold","triggerOnce","jsxs","jsx","id","image","title","link","role","summary","__docgenInfo","Loading","Empty","routes","newProject","Failure","error","message","Success","projects","map","StaticProjectsList","setProjects","useState","loading","setLoading","setError","useEffect","fetchProjects","console","log","data","loadProjects","err","length","ProjectsList","LightModel","mousePosition","positions","containerRef","onAnimationComplete","onLensClick","gltf","useLoader","GLTFLoader","modelRefs","useRef","spotLight","setSpotLight","nameMesh","setNameMesh","animationPhase","setAnimationPhase","animationStartTime","Date","now","hasCursorEntered","setHasCursorEntered","lightIntensity","setLightIntensity","lastMouseMoveTime","fadeStartTime","isFading","setIsFading","lightColors","setLightColors","colorCycle","colorTransitionRef","rotatingLights","setRotatingLights","handleMouseMove","current","addEventListener","removeEventListener","cycleLightColor","lightNumber","prev","currentColor","currentIndex","indexOf","nextIndex","nextColor","scene","traverse","child","name","toLowerCase","includes","THREE","material","color","set","emissive","parent","getLensColor","lensNumber","createSpotLight","newSpotLight","Math","PI","position","rotation","x","target","event","initialRotations","Map","parseInt","match","emissiveIntensity","metalness","roughness","envMapIntensity","add","intensity","useFrame","currentTime","elapsedTime","timeSinceLastMouseMove","fadeDuration","fadeStep","Object","entries","filter","_","shouldRotate","forEach","children","find","startColor","endColor","progress","transition","currentHSL","h","s","l","nextHSL","getHSL","interpolatedColor","setHSL","copy","spotlight","min","rotationProgress","startRotation","targetRotation","currentZRotation","z","rect","getBoundingClientRect","centerX","left","width","centerY","top","height","group","index","lightScreenX","lightScreenY","dx","dy","y","baseAngle","atan2","currentXRotation","screenDy","maxScreenDistance","yPosForXRot","max","targetXRotation","Fragment","el","e","stopPropagation","object","lightMatch","geometry","MultiLightSource","className","lightPositions","setMousePosition","clientX","clientY","fov","antialias","alpha","powerPreference","HeroBackground","Hero","contentRef","style","setProperty","Feature","background","eyebrow","currentTarget","element","document","querySelector","TwoColumnText","paragraphs","paragraph","AccordionList","hue","childrenWithHue","React","Children","isValidElement","cloneElement","AccordionItem","header","isOpen","setIsOpen","GradientWrapper","setHue","animationFrame","startTime","animate","timestamp","newHue","documentElement","requestAnimationFrame","cancelAnimationFrame","HomePage","isContentVisible","setIsContentVisible","meta","component"],"mappings":"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"}