{"version":3,"file":"ArticleCell-K_zuY4OS.js","sources":["../../../src/components/ArticleCell/ArticleCell.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useQuery } from '@redwoodjs/web'\nimport { gql } from '@apollo/client'\nimport type { ArticleQuery } from 'types/graphql'\nimport Article from 'src/components/Article/Article'\nimport { loadArticle } from 'src/utils/staticData'\n\n// Only use GraphQL in development\nconst QUERY = process.env.NODE_ENV === 'development' ? gql`\n  query ArticleQuery($id: Int!) {\n    post(id: $id) {\n      id\n      title\n      body\n      createdAt\n    }\n  }\n` : null\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Empty = () => <div>Article not found</div>\n\nexport const Failure = ({ error }) => (\n  <div className=\"rw-cell-error\">{error?.message}</div>\n)\n\ninterface SuccessProps {\n  post: {\n    id: number\n    title: string\n    body: string\n    createdAt: string\n  }\n}\n\nexport const Success = ({ post }: SuccessProps) => {\n  return <Article post={post} />\n}\n\n// GraphQL version for development\nconst ArticleCell = ({ id }) => {\n  const { loading, error, data } = useQuery(QUERY, {\n    variables: { id },\n  })\n\n  if (loading) return <Loading />\n  if (error) return <Failure error={error} />\n  if (!data?.post) return <Empty />\n\n  return <Success post={data.post} />\n}\n\n// Static data version for production\nconst StaticArticleCell = ({ id }) => {\n  const [article, setArticle] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const fetchArticle = async () => {\n      try {\n        const data = await loadArticle(id)\n        if (data) {\n          setArticle(data)\n        }\n      } catch (err) {\n        setError(err)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchArticle()\n  }, [id])\n\n  if (loading) return <Loading />\n  if (error) return <Failure error={error} />\n  if (!article) return <Empty />\n\n  return <Success post={article} />\n}\n\nexport default process.env.NODE_ENV === 'development' ? ArticleCell : StaticArticleCell"],"names":["Loading","jsx","Empty","Failure","error","message","Success","post","StaticArticleCell","id","article","setArticle","useState","loading","setLoading","setError","useEffect","fetchArticle","data","loadArticle","err","__docgenInfo"],"mappings":";;;AAmBO,MAAMA,UAAUA,MAAOC,kCAAA,IAAA,OAAA,EAAI,UAAU,aAAA,CAAA;AAErC,MAAMC,QAAQA,MAAOD,kCAAA,IAAA,OAAA,EAAI,UAAiB,oBAAA,CAAA;AAE1C,MAAME,UAAUA,CAAC;AAAA,EAAEC;AAAM,MAC7BH,kCAAAA,IAAA,OAAA,EAAI,WAAU,iBAAiBG,yCAAOC,QAAQ,CAAA;AAY1C,MAAMC,UAAUA,CAAC;AAAA,EAAEC;AAAmB,MAAM;AAC1C,SAACN,sCAAA,WAAQ,MAAa;AAC/B;AAgBA,MAAMO,oBAAoBA,CAAC;AAAA,EAAEC;AAAG,MAAM;AACpC,QAAM,CAACC,SAASC,UAAU,IAAIC,aAAAA,SAAS,IAAI;AAC3C,QAAM,CAACC,SAASC,UAAU,IAAIF,aAAAA,SAAS,IAAI;AAC3C,QAAM,CAACR,OAAOW,QAAQ,IAAIH,aAAAA,SAAS,IAAI;AAEvCI,eAAAA,UAAU,MAAM;AACd,UAAMC,eAAe,YAAY;AAC3B,UAAA;AACIC,cAAAA,OAAO,MAAMC,YAAYV,EAAE;AACjC,YAAIS,MAAM;AACRP,qBAAWO,IAAI;AAAA,QAAA;AAAA,eAEVE,KAAK;AACZL,iBAASK,GAAG;AAAA,MAAA,UACJ;AACRN,mBAAW,KAAK;AAAA,MAAA;AAAA,IAEpB;AAEa,iBAAA;AAAA,EAAA,GACZ,CAACL,EAAE,CAAC;AAEHI,MAAAA,QAAgB,QAACZ,sCAAA,SAAS,CAAA,CAAA;AAC9B,MAAIG,MAAe,QAAAH,kCAAAA,IAAA,SAAA,EAAQ,OAAe;AAC1C,MAAI,CAACS,QAAgB,QAACT,sCAAA,OAAO,CAAA,CAAA;AAEtB,SAACA,kCAAA,IAAA,SAAQ,EAAA,MAAMS,SAAU;AAClC;AAEA,MAAA,cAAsEF;AAAgBR,QAAAqB,eAAA;AAAA,EAAA,eAAA;AAAA,EAAA,WAAA,CAAA;AAAA,EAAA,eAAA;AAAA;AAAAnB,MAAAmB,eAAA;AAAA,EAAA,eAAA;AAAA,EAAA,WAAA,CAAA;AAAA,EAAA,eAAA;AAAA;AAAAlB,QAAAkB,eAAA;AAAA,EAAA,eAAA;AAAA,EAAA,WAAA,CAAA;AAAA,EAAA,eAAA;AAAA;AAAAf,QAAAe,eAAA;AAAA,EAAA,eAAA;AAAA,EAAA,WAAA,CAAA;AAAA,EAAA,eAAA;AAAA,EAAA,SAAA;AAAA,IAAA,QAAA;AAAA,MAAA,YAAA;AAAA,MAAA,UAAA;AAAA,QAAA,QAAA;AAAA,QAAA,QAAA;AAAA,QAAA,OAAA;AAAA,QAAA,aAAA;AAAA,UAAA,cAAA,CAAA;AAAA,YAAA,OAAA;AAAA,YAAA,SAAA;AAAA,cAAA,QAAA;AAAA,cAAA,YAAA;AAAA,YAAA;AAAA,UAAA,GAAA;AAAA,YAAA,OAAA;AAAA,YAAA,SAAA;AAAA,cAAA,QAAA;AAAA,cAAA,YAAA;AAAA,YAAA;AAAA,UAAA,GAAA;AAAA,YAAA,OAAA;AAAA,YAAA,SAAA;AAAA,cAAA,QAAA;AAAA,cAAA,YAAA;AAAA,YAAA;AAAA,UAAA,GAAA;AAAA,YAAA,OAAA;AAAA,YAAA,SAAA;AAAA,cAAA,QAAA;AAAA,cAAA,YAAA;AAAA,YAAA;AAAA,UAAA,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MAAA,eAAA;AAAA,IAAA;AAAA,EAAA;AAAA;"}